{
  "name": "@protobufjs/utf8",
  "description": "A minimal UTF8 implementation for number arrays.",
  "version": "1.1.0",
  "author": {
    "name": "Daniel Wirtz",
    "email": "dcode+protobufjs@dcode.io"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/dcodeIO/protobuf.js.git"
  },
  "license": "BSD-3-Clause",
  "main": "index.js",
  "types": "index.d.ts",
  "devDependencies": {
    "istanbul": "^0.4.5",
    "tape": "^4.6.3"
  },
  "scripts": {
    "test": "tape tests/*.js",
    "coverage": "istanbul cover node_modules/tape/bin/tape tests/*.js"
  },
  "readme": "@protobufjs/utf8\r\n================\r\n[![npm](https://img.shields.io/npm/v/@protobufjs/utf8.svg)](https://www.npmjs.com/package/@protobufjs/utf8)\r\n\r\nA minimal UTF8 implementation for number arrays.\r\n\r\nAPI\r\n---\r\n\r\n* **utf8.length(string: `string`): `number`**<br />\r\n  Calculates the UTF8 byte length of a string.\r\n\r\n* **utf8.read(buffer: `Uint8Array`, start: `number`, end: `number`): `string`**<br />\r\n  Reads UTF8 bytes as a string.\r\n\r\n* **utf8.write(string: `string`, buffer: `Uint8Array`, offset: `number`): `number`**<br />\r\n  Writes a string as UTF8 bytes.\r\n\r\n\r\n**License:** [BSD 3-Clause License](https://opensource.org/licenses/BSD-3-Clause)\r\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/dcodeIO/protobuf.js/issues"
  },
  "homepage": "https://github.com/dcodeIO/protobuf.js#readme",
  "_id": "@protobufjs/utf8@1.1.0",
  "_shasum": "a777360b5b39a1a2e5106f8e858f2fd2d060c570",
  "_resolved": "https://registry.npmjs.org/@protobufjs/utf8/-/utf8-1.1.0.tgz",
  "_from": "@protobufjs/utf8@>=1.1.0 <2.0.0"
}
