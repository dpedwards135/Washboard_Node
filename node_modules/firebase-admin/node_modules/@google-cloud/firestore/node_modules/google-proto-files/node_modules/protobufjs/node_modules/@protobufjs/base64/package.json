{
  "name": "@protobufjs/base64",
  "description": "A minimal base64 implementation for number arrays.",
  "version": "1.1.2",
  "author": {
    "name": "Daniel Wirtz",
    "email": "dcode+protobufjs@dcode.io"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/dcodeIO/protobuf.js.git"
  },
  "license": "BSD-3-Clause",
  "main": "index.js",
  "types": "index.d.ts",
  "devDependencies": {
    "istanbul": "^0.4.5",
    "tape": "^4.6.3"
  },
  "scripts": {
    "test": "tape tests/*.js",
    "coverage": "istanbul cover node_modules/tape/bin/tape tests/*.js"
  },
  "readme": "@protobufjs/base64\r\n==================\r\n[![npm](https://img.shields.io/npm/v/@protobufjs/base64.svg)](https://www.npmjs.com/package/@protobufjs/base64)\r\n\r\nA minimal base64 implementation for number arrays.\r\n\r\nAPI\r\n---\r\n\r\n* **base64.length(string: `string`): `number`**<br />\r\n  Calculates the byte length of a base64 encoded string.\r\n\r\n* **base64.encode(buffer: `Uint8Array`, start: `number`, end: `number`): `string`**<br />\r\n  Encodes a buffer to a base64 encoded string.\r\n\r\n* **base64.decode(string: `string`, buffer: `Uint8Array`, offset: `number`): `number`**<br />\r\n  Decodes a base64 encoded string to a buffer.\r\n\r\n**License:** [BSD 3-Clause License](https://opensource.org/licenses/BSD-3-Clause)\r\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/dcodeIO/protobuf.js/issues"
  },
  "homepage": "https://github.com/dcodeIO/protobuf.js#readme",
  "_id": "@protobufjs/base64@1.1.2",
  "_shasum": "4c85730e59b9a1f1f349047dbf24296034bb2735",
  "_resolved": "https://registry.npmjs.org/@protobufjs/base64/-/base64-1.1.2.tgz",
  "_from": "@protobufjs/base64@>=1.1.2 <2.0.0"
}
