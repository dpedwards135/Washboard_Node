{
  "name": "@protobufjs/eventemitter",
  "description": "A minimal event emitter.",
  "version": "1.1.0",
  "author": {
    "name": "Daniel Wirtz",
    "email": "dcode+protobufjs@dcode.io"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/dcodeIO/protobuf.js.git"
  },
  "license": "BSD-3-Clause",
  "main": "index.js",
  "types": "index.d.ts",
  "devDependencies": {
    "istanbul": "^0.4.5",
    "tape": "^4.6.3"
  },
  "scripts": {
    "test": "tape tests/*.js",
    "coverage": "istanbul cover node_modules/tape/bin/tape tests/*.js"
  },
  "readme": "@protobufjs/eventemitter\r\n========================\r\n[![npm](https://img.shields.io/npm/v/@protobufjs/eventemitter.svg)](https://www.npmjs.com/package/@protobufjs/eventemitter)\r\n\r\nA minimal event emitter.\r\n\r\nAPI\r\n---\r\n\r\n* **new EventEmitter()**<br />\r\n  Constructs a new event emitter instance.\r\n\r\n* **EventEmitter#on(evt: `string`, fn: `function`, [ctx: `Object`]): `EventEmitter`**<br />\r\n  Registers an event listener.\r\n\r\n* **EventEmitter#off([evt: `string`], [fn: `function`]): `EventEmitter`**<br />\r\n  Removes an event listener or any matching listeners if arguments are omitted.\r\n\r\n* **EventEmitter#emit(evt: `string`, ...args: `*`): `EventEmitter`**<br />\r\n  Emits an event by calling its listeners with the specified arguments.\r\n\r\n**License:** [BSD 3-Clause License](https://opensource.org/licenses/BSD-3-Clause)\r\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/dcodeIO/protobuf.js/issues"
  },
  "homepage": "https://github.com/dcodeIO/protobuf.js#readme",
  "_id": "@protobufjs/eventemitter@1.1.0",
  "_shasum": "355cbc98bafad5978f9ed095f397621f1d066b70",
  "_resolved": "https://registry.npmjs.org/@protobufjs/eventemitter/-/eventemitter-1.1.0.tgz",
  "_from": "@protobufjs/eventemitter@>=1.1.0 <2.0.0"
}
